[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
  "-v",
  "--tb=short",
  "--cov=custom_components.simple_inventory",
  "--cov-report=term-missing",
  "--cov-report=html:htmlcov",
  "--cov-report=xml",
  "--cov-fail-under=80",
  "--strict-markers",
  "--strict-config",
]
asyncio_mode = "auto"
markers = [
  "asyncio: marks tests as async",
  "slow: marks tests as slow running",
  "integration: marks tests as integration tests",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["custom_components/simple_inventory"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/env/*", ".tox/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.mutmut]
paths_to_mutate = ["custom_components/simple_inventory/"]
tests_dir = ["tests/"]
runner = "python -m pytest tests/ -x --tb=no -q"
backup = false
