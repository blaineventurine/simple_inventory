name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.2.3)"
        required: true
        type: string

env:
  DEFAULT_PYTHON: "3.13.4"

jobs:
  test:
    uses: ./.github/workflows/tests.yml

  validate:
    uses: ./.github/workflows/validate.yml

  release:
    runs-on: ubuntu-latest
    needs: [test, validate]
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update version in files
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION=${{ steps.version.outputs.version }}
          VERSION_NUM=${VERSION#v}

          # Update manifest.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION_NUM\"/" custom_components/simple_inventory/manifest.json

          # Update const.py if it exists
          if [ -f custom_components/simple_inventory/const.py ]; then
            sed -i "s/VERSION = \".*\"/VERSION = \"$VERSION_NUM\"/" custom_components/simple_inventory/const.py
          fi

      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## Changes since $PREVIOUS_TAG" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Create ZIP for HACS
        run: |
          cd custom_components
          zip -r ../simple_inventory.zip simple_inventory/

      - name: Upload ZIP to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./simple_inventory.zip
          asset_name: simple_inventory.zip
          asset_content_type: application/zip
