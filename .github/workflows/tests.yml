name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  DEFAULT_PYTHON: "3.13.4"
  # MIN_PYTHON: "3.10"
  # MAX_PYTHON: "3.12"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.DEFAULT_PYTHON }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run black
        run: black --check custom_components/ tests/

      - name: Run isort
        run: isort --check-only custom_components/ tests/

      - name: Run flake8
        run: flake8 custom_components/ tests/

      - name: Run mypy
        run: mypy custom_components/
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.DEFAULT_PYTHON }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=custom_components/simple_inventory --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install safety
        run: pip install safety

      - name: Run safety check
        run: safety check -r requirements-dev.txt

  # mutation-test:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'mutation-test')
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.DEFAULT_PYTHON }}
  #
  #     - name: Cache pip dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-mutation-${{ env.DEFAULT_PYTHON }}-${{ hashFiles('requirements-dev.txt') }}
  #
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements-dev.txt
  #
  #     - name: Run mutation tests
  #       run: |
  #         mutmut run --paths-to-mutate=custom_components/simple_inventory
  #
  #     - name: Generate mutation report
  #       if: always()
  #       run: |
  #         mutmut html
  #         mutmut results
  #
  #     - name: Upload mutation report
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: mutation-report
  #         path: html/
  #
